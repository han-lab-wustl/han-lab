% calc opto epoch success and fails
% https://www.nature.com/articles/s41593-022-01050-4
% lick selectivity = smoothed licks in rew zone - smoothed licks in opp
% zone / (smoothed licks in rew zone + smoothed licks in opp zone)
% rewzone = 10 cm before reward
clear all; close all
mouse_name = "e218";
dys = [20,21,22,23,35,36,37,38,39,40,41,42,43,44,45,47 48 49];
opto_ep = [-1 -1 -1 -1,3 0 1 2 0 1 3, 0 1 2, 0 3 0 1];
src = "X:\vipcre";
epind = 1;
bin_size = 2; % cm bins for lick
ntrials = 8; % get licks for last n trials
rates_opto = []; rates_ctrl = []; rates_preopto = []; rates_inctrl_1 = []; rates_inctrl_2 = [];
licks_opto = []; licks_ctrl = []; licks_preopto = []; licks_inctrl_1 = []; licks_inctrl_2 = [];
com_opto_success = []; com_ctrl_success = []; com_preopto_success = []; com_inctrl_1_success = []; com_inctrl_2_success = [];
com_opto_fails = []; com_ctrl_fails = []; com_preopto_fails = []; com_inctrl_1_fails = []; com_inctrl_2_fails = [];
for dy=dys
    daypth = dir(fullfile(src, mouse_name, string(dy), "**\*Fall.mat"));
    load(fullfile(daypth.folder,daypth.name), 'licks', 'trialnum', 'rewards', 'changeRewLoc', ...
        'ybinned', 'timedFF', 'VR');
    eps = find(changeRewLoc>0);
    eps = [eps length(changeRewLoc)];
    track_length = 180/VR.scalingFACTOR;
    nbins = track_length/bin_size;
    ybinned = ybinned/VR.scalingFACTOR;
    rewlocs = changeRewLoc(changeRewLoc>0)/VR.scalingFACTOR;
    rewsize = VR.settings.rewardZone/VR.scalingFACTOR;
    if opto_ep(epind)==3
        eprng = eps(3):eps(4);
        trialnum_ = trialnum(eprng);
        reward_ = rewards(eprng);
        licks_ = licks(eprng);
        ybinned_ = ybinned(eprng);
        rewloc = rewlocs(opto_ep(epind));
        [success,fail,str, ftr, ttr, total_trials] = get_success_failure_trials(trialnum_,reward_);
        successrate_opto = success/total_trials;
        last8rng = (trialnum_>max(unique(trialnum_))-ntrials);
        lick_selectivity_opto = get_lick_selectivity(licks_(last8rng), ybinned_(last8rng), bin_size, nbins, rewloc, ...
            rewsize);
        success=1;[com_success_opto] = get_com_licks(trialnum_, reward_, str, licks_, ybinned_, rewloc, ...
        rewsize, success); % coms successful trials
        success=0;[com_fails_opto] = get_com_licks(trialnum_, reward_, ftr, licks_, ybinned_, rewloc, ...
        rewsize,success); % coms failed trials
        % vs. previous epoch
        eprng = eps(2):eps(3);
        trialnum_ = trialnum(eprng);
        reward_ = rewards(eprng);
        licks_ = licks(eprng);
        ybinned_ = ybinned(eprng);
        rewloc = rewlocs(2);
        [success,fail,str, ftr, ttr, total_trials] = get_success_failure_trials(trialnum_,reward_);
        successrate_ctrl = success/total_trials;
        last8rng = (trialnum_>max(unique(trialnum_))-ntrials);
        lick_selectivity_ctrl = get_lick_selectivity(licks_(last8rng), ybinned_(last8rng), bin_size, nbins, rewloc, ...
            rewsize);
        success=1;[com_success_ctrl] = get_com_licks(trialnum_, reward_, str, licks_, ybinned_, rewloc, ...
        rewsize,success); % coms successful trials
        success=0;[com_fails_ctrl] = get_com_licks(trialnum_, reward_, ftr, licks_, ybinned_, rewloc, ...
        rewsize,success); % coms failed trials
        rates_opto(epind) = successrate_opto;
        licks_opto(epind) = lick_selectivity_opto;
        com_opto_success(epind) = mean(com_success_opto,'omitnan');
        com_opto_fails(epind) = mean(com_fails_opto, 'omitnan');
        rates_ctrl(epind) = successrate_ctrl;
        licks_ctrl(epind) = lick_selectivity_ctrl;
        com_ctrl_success(epind) = mean(com_success_ctrl,'omitnan');
        com_ctrl_fails(epind) = mean(com_fails_ctrl,'omitnan');
    elseif opto_ep(epind)==2
        eprng = eps(2):eps(3);
        trialnum_ = trialnum(eprng);
        reward_ = rewards(eprng);
        licks_ = licks(eprng);
        ybinned_ = ybinned(eprng);
        rewloc = rewlocs(opto_ep(epind));
        [success,fail,str, ftr, ttr, total_trials] = get_success_failure_trials(trialnum_,reward_);
        successrate_opto = success/total_trials;
        last8rng = (trialnum_>max(unique(trialnum_))-ntrials);
        lick_selectivity_opto = get_lick_selectivity(licks_(last8rng), ybinned_(last8rng), bin_size, nbins, rewloc, ...
            rewsize);
        success=1;[com_success_opto] = get_com_licks(trialnum_, reward_, str, licks_, ybinned_, rewloc, ...
        rewsize, success); % coms successful trials
        success=0;[com_fails_opto] = get_com_licks(trialnum_, reward_, ftr, licks_, ybinned_, rewloc, ...
        rewsize, success); % coms failed trials
        % vs. previous epoch
        eprng = eps(1):eps(2);
        trialnum_ = trialnum(eprng);
        reward_ = rewards(eprng);
        licks_ = licks(eprng);
        ybinned_ = ybinned(eprng);
        rewloc = rewlocs(1);
        [success,fail,str, ftr, ttr, total_trials] = get_success_failure_trials(trialnum_,reward_);
        successrate_ctrl = success/total_trials;
        last8rng = (trialnum_>max(unique(trialnum_))-ntrials);
        success=1; [com_success_ctrl] = get_com_licks(trialnum_, reward_, str, licks_, ybinned_, rewloc, ...
        rewsize,success); % coms successful trials
        success=0; [com_fails_ctrl] = get_com_licks(trialnum_, reward_, ftr, licks_, ybinned_, rewloc, ...
        rewsize,success); % coms failed trials
        rates_opto(epind) = successrate_opto;
        licks_opto(epind) = lick_selectivity_opto;
        com_opto_success(epind) = mean(com_success_opto,'omitnan');
        com_opto_fails(epind) = mean(com_fails_opto,'omitnan');
        rates_ctrl(epind) = successrate_ctrl;
        licks_ctrl(epind) = lick_selectivity_ctrl;
        com_ctrl_success(epind) = mean(com_success_ctrl,'omitnan');
        com_ctrl_fails(epind) = mean(com_fails_ctrl,'omitnan');
    elseif opto_ep(epind)==-1 % just pre opto days
        eprng = eps(1):eps(2);
        trialnum_ = trialnum(eprng);
        reward_ = rewards(eprng);
        licks_ = licks(eprng);
        ybinned_ = ybinned(eprng);
        rewloc = rewlocs(1);
        [success,fail,str, ftr, ttr, total_trials] = get_success_failure_trials(trialnum_,reward_);
        last8rng = (trialnum_>max(unique(trialnum_))-ntrials);
        lick_selectivity_ctrl = get_lick_selectivity(licks_(last8rng), ybinned_(last8rng), bin_size, nbins, rewloc, ...
            rewsize);
        successrate = success/total_trials;
        success = 1; [com_success_ctrl] = get_com_licks(trialnum_, reward_, str, licks_, ybinned_, rewloc, ...
        rewsize, success); % coms successful trials
        success = 0; [com_fails_ctrl] = get_com_licks(trialnum_, reward_, ftr, licks_, ybinned_, rewloc, ...
        rewsize, success); % coms failed trials
        rates_preopto(epind) = successrate;
        licks_preopto(epind) = lick_selectivity_ctrl;
        com_preopto_success(epind) = mean(com_success_ctrl,'omitnan');
        com_preopto_fails(epind) = mean(com_fails_ctrl,'omitnan');
    elseif opto_ep(epind)==0  % intermediate control days 1
        eprng = eps(1):eps(2);
        trialnum_ = trialnum(eprng);
        reward_ = rewards(eprng);
        licks_ = licks(eprng);
        ybinned_ = ybinned(eprng);
        rewloc = rewlocs(1);
        [success,fail,str, ftr, ttr, total_trials] = get_success_failure_trials(trialnum_,reward_);
        last8rng = (trialnum_>max(unique(trialnum_))-ntrials);
        lick_selectivity_ctrl = get_lick_selectivity(licks_(last8rng), ybinned_(last8rng), bin_size, nbins, rewloc, ...
            rewsize);
        successrate = success/total_trials;
        success=1; [com_success_ctrl] = get_com_licks(trialnum_, reward_, str, licks_, ybinned_, rewloc, ...
        rewsize, success); % coms successful trials
        success=0; [com_fails_ctrl] = get_com_licks(trialnum_, reward_, ftr, licks_, ybinned_, rewloc, ...
        rewsize, success); % coms failed trials
        rates_inctrl_1(epind) = successrate;
        licks_inctrl_1(epind) = lick_selectivity_ctrl;
        com_inctrl_1_success(epind) = mean(com_success_ctrl,'omitnan');
        com_inctrl_1_fails(epind) = mean(com_fails_ctrl,'omitnan');
    elseif opto_ep(epind)==1  % intermediate control days 2
        eprng = eps(1):eps(2);
        trialnum_ = trialnum(eprng);
        reward_ = rewards(eprng);
        licks_ = licks(eprng);
        ybinned_ = ybinned(eprng);
        rewloc = rewlocs(1);
        [success,fail,str, ftr, ttr, total_trials] = get_success_failure_trials(trialnum_,reward_);
        last8rng = (trialnum_>max(unique(trialnum_))-ntrials);
        lick_selectivity_ctrl = get_lick_selectivity(licks_(last8rng), ybinned_(last8rng), bin_size, nbins, rewloc, ...
            rewsize);
        successrate = success/total_trials;
        success=1; [com_success_ctrl] = get_com_licks(trialnum_, reward_, str, licks_, ybinned_, rewloc, ...
        rewsize, success); % coms successful trials
        success=0; [com_fails_ctrl] = get_com_licks(trialnum_, reward_, ftr, licks_, ybinned_, rewloc, ...
        rewsize, success); % coms failed trials
        rates_inctrl_2(epind) = successrate;
        licks_inctrl_2(epind) = lick_selectivity_ctrl;
        com_inctrl_2_success(epind) = mean(com_success_ctrl,'omitnan');
        com_inctrl_2_fails(epind) = mean(com_fails_ctrl,'omitnan');
    end
    epind = epind+1;
end

%remove zeros from others
rates_opto = nonzeros(rates_opto);
rates_preopto = nonzeros(rates_preopto);
rates_ctrl = nonzeros(rates_ctrl);
rates_inctrl_1 = nonzeros(rates_inctrl_1);
rates_inctrl_2 = nonzeros(rates_inctrl_2);
licks_preopto = nonzeros(licks_preopto);
licks_opto = nonzeros(licks_opto);
licks_ctrl = nonzeros(licks_ctrl);
licks_inctrl_1 = nonzeros(licks_inctrl_1);
licks_inctrl_2 = nonzeros(licks_inctrl_2);
com_preopto_success = nonzeros(com_preopto_success);
com_opto_success = nonzeros(com_opto_success);
com_ctrl_success = nonzeros(com_ctrl_success);
com_inctrl_1_success = nonzeros(com_inctrl_1_success);
com_inctrl_2_success = nonzeros(com_inctrl_2_success);
com_preopto_fails = nonzeros(com_preopto_fails);
com_opto_fails = nonzeros(com_opto_fails);
com_ctrl_fails = nonzeros(com_ctrl_fails);
com_inctrl_1_fails = nonzeros(com_inctrl_1_fails);
com_inctrl_2_fails = nonzeros(com_inctrl_2_fails);
% barplot
figure;
bar([mean(rates_preopto) mean(rates_inctrl_1) mean(rates_inctrl_2) mean(rates_ctrl) mean(rates_opto)], 'FaceColor', 'w'); hold on
plot(1, rates_preopto, 'ko')
plot(2, rates_inctrl_1, 'ko')
plot(3, rates_inctrl_2, 'ko')
plot(4, rates_ctrl, 'ko')
plot(5, rates_opto, 'ko')
ylabel('success rate')
xlabel('conditions')
xticklabels(["preopto days all ep", "control day 1 in b/wn opto", "control day 2 in b/wn opto", ...
    "previous ep", "opto ep"])
[h,p,i,stats] = ttest2(rates_opto, rates_ctrl); % sig

% lick selectivity
figure;
bar([mean(licks_preopto) mean(licks_inctrl_1) mean(licks_inctrl_2) mean(licks_ctrl) mean(licks_opto)], 'FaceColor', 'w'); hold on
plot(1, licks_preopto, 'ko')
plot(2, licks_inctrl_1, 'ko')
plot(3, licks_inctrl_2, 'ko')
plot(4, licks_ctrl, 'ko')
plot(5, licks_opto, 'ko')
ylabel('lick selectivity (excluding consumption licks)')
xlabel('conditions')
xticklabels(["preopto days all ep", "control day 1 in b/wn opto", "control day 2 in b/wn opto", ...
    "previous ep", "opto ep"])
[h,p,i,stats] = ttest2(licks_preopto,licks_opto); % sig

% com
figure;
bar([mean(com_preopto_success) mean(com_inctrl_1_success) mean(com_inctrl_2_success) mean(com_ctrl_success) mean(com_opto_success)], ...
    'FaceColor', 'w'); hold on
plot(1, licks_preopto, 'ko')
plot(2, licks_inctrl_1, 'ko')
plot(3, licks_inctrl_2, 'ko')
plot(4, licks_ctrl, 'ko')
plot(5, licks_opto, 'ko')
ylabel('lick selectivity (excluding consumption licks)')
xlabel('conditions')
xticklabels(["preopto days all ep", "control day 1 in b/wn opto", "control day 2 in b/wn opto", ...
    "previous ep", "opto ep"])
[h,p,i,stats] = ttest2(licks_preopto,licks_opto); % sig